security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppCustomAuthenticator
            user_checker: App\Security\UserChecker
            login_throttling:
                max_attempts: 5
            two_factor:
                auth_form_path: 2fa_login
                check_path: 2fa_login_check
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path: /
                signature_properties: [ password ]
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_COMMERCIAL }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/connexion/authentification-a-double-facteur, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
        - { path: ^/switch-local, role: [PUBLIC_ACCESS] }
    role_hierarchy:
        ROLE_COMMERCIAL: IS_AUTHENTICATED_ANONYMOUSLY
        ROLE_ADMIN: ROLE_COMMERCIAL
        ROLE_BOSS: ROLE_ADMIN

when@dev:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: plaintext
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: plaintext
