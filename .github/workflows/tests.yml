name: Tests suite

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Get cache
        id: cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Create Database
        env:
          DATABASE_URL: sqlite:///%kernel.project_dir%/var/database_test.db
        run: |
          rm -rf migrations
          mkdir migrations
          rm -rf migrations_sqlite
          mkdir migrations_sqlite
          pwd .
          php bin/console doctrine:database:create --env=test
          php bin/console doctrine:migrations:diff --env=test
          php bin/console d:m:m --no-interaction --env=test
          php bin/console d:f:l --no-interaction --env=test

      - name: PHPUnit
        uses: docker://proglab/actions-phpunit-symfony-php8.1:v1.0.3

      - name: Archive production artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: var/log
