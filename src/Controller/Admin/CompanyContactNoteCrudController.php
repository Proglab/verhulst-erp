<?php

declare(strict_types=1);

namespace App\Controller\Admin;

use App\Entity\CompanyContactNote;
use App\Entity\User;
use App\Repository\CompanyContactRepository;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Config\KeyValueStore;
use EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use Symfony\Component\Form\FormInterface;

class CompanyContactNoteCrudController extends AbstractCrudController
{
    public function __construct(private CompanyContactRepository $companyContactRepository)
    {
    }

    public static function getEntityFqcn(): string
    {
        return CompanyContactNote::class;
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            TextEditorField::new('note'),
            AssociationField::new('company_contact')->addCssClass('d-none'),
        ];
    }

    public function configureCrud(Crud $crud): Crud
    {
        $crud->setEntityLabelInPlural('Notes')
            ->setEntityLabelInSingular('Note')
            ->showEntityActionsInlined(true)
            // ->setSearchFields(['firstname', 'lastname', 'company.name', 'email', 'phone', 'gsm', 'note', 'lang', 'company.vat_number']);
            ->setSearchFields(null);

        return parent::configureCrud($crud);
    }

    public function createNewForm(EntityDto $entityDto, KeyValueStore $formOptions, AdminContext $context): FormInterface
    {
        $form = parent::createNewForm($entityDto, $formOptions, $context); // TODO: Change the autogenerated stub
        $form->get('company_contact')->setData($this->companyContactRepository->find($context->getRequest()->get('client_id')));

        return $form;
    }

    /**
     * @param CompanyContactNote $entityInstance
     */
    public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        /** @var User $user */
        $user = $this->getUser();
        $entityInstance->setUser($user);
        $entityInstance->setCreatedDt(new \DateTime('now'));
        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }
}
