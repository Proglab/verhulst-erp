<?php

declare(strict_types=1);

namespace App\Controller\Admin\Budget\Ref;

use App\Controller\Admin\BaseCrudController;
use App\Entity\Budget\Ref\Category;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Field\CollectionField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;

class CategoryCrudController extends BaseCrudController
{
    public static function getEntityFqcn(): string
    {
        return Category::class;
    }

    public function configureCrud(Crud $crud): Crud
    {
        $crud = parent::configureCrud($crud);
        $crud->setEntityLabelInPlural('Catégories générales')
            ->setEntityLabelInSingular('Catégorie générale')
            ->showEntityActionsInlined(true)
            ->setEntityPermission('ROLE_BUDGET');

        return $crud;
    }

    public function configureFields(string $pageName): iterable
    {
        $name = TextField::new('name')->setLabel('Catégorie');
        $subCategories = CollectionField::new('sub_categories', 'Sous catégories')->useEntryCrudForm(SubCategoryCrudController::class);

        return [$name, $subCategories];
    }

    public function configureActions(Actions $actions): Actions
    {
        $actions = parent::configureActions($actions); // TODO: Change the autogenerated stub
        $actions->setPermission(Action::INDEX, 'ROLE_ADMIN_BUDGET');
        $actions->setPermission(Action::DETAIL, 'ROLE_ADMIN_BUDGET');
        $actions->setPermission(Action::DELETE, 'ROLE_ADMIN_BUDGET');
        $actions->setPermission(Action::NEW, 'ROLE_ADMIN_BUDGET');
        $actions->setPermission(Action::EDIT, 'ROLE_ADMIN_BUDGET');
        $actions->setPermission(Action::SAVE_AND_RETURN, 'ROLE_ADMIN_BUDGET');
        $actions->disable(Action::SAVE_AND_ADD_ANOTHER);
        $actions->disable(Action::SAVE_AND_CONTINUE);
        $actions->disable(Action::BATCH_DELETE);

        return $actions;
    }
}
